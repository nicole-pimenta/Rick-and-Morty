{"ast":null,"code":"var _jsxFileName = \"/home/nicole/Desktop/1.Kenzie/Q2/1.Entregas Sp1/rick-morty/src/components/CharCard/index.js\";\nimport \"../Characters/styles.css\";\nimport Alive from \"../Alive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharCard = ({\n  character,\n  key\n}) => {\n  const {\n    name,\n    image,\n    status,\n    species\n  } = character;\n\n  const handleName = name => {\n    let handledName = name.split(\" \").join(\"\");\n\n    if (handledName.length > 15) {\n      return name.slice(0, 13) + \"...\";\n    }\n\n    return name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: status === \"Alive\" ? /*#__PURE__*/_jsxDEV(Alive, {\n        name: name,\n        species: species,\n        image: image,\n        handleName: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          backgroundColor: \"pink\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: handleName(name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Specie: \", species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"picture\",\n          alt: name,\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = CharCard;\nexport default CharCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharCard\");","map":{"version":3,"sources":["/home/nicole/Desktop/1.Kenzie/Q2/1.Entregas Sp1/rick-morty/src/components/CharCard/index.js"],"names":["Alive","CharCard","character","key","name","image","status","species","handleName","handledName","split","join","length","slice","color","backgroundColor"],"mappings":";AAAA,OAAO,0BAAP;AACA,OAAOA,KAAP,MAAkB,UAAlB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAwB;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAmCL,SAAzC;;AAEA,QAAMM,UAAU,GAAIJ,IAAD,IAAU;AAC3B,QAAIK,WAAW,GAAGL,IAAI,CAACM,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAlB;;AACA,QAAIF,WAAW,CAACG,MAAZ,GAAqB,EAAzB,EAA6B;AAC3B,aAAOR,IAAI,CAACS,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB,KAA3B;AACD;;AACD,WAAOT,IAAP;AACD,GAND;;AAQA,sBACE;AAAA,2BACE;AAAe,MAAA,SAAS,EAAC,OAAzB;AAAA,gBACGE,MAAM,KAAK,OAAX,gBACC,QAAC,KAAD;AACE,QAAA,IAAI,EAAEF,IADR;AAEE,QAAA,OAAO,EAAEG,OAFX;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,UAAU,EAAEG;AAJd;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,eAAe,EAAE;AAAjC,SAAZ;AAAA,gCACE;AAAA,oBAAIP,UAAU,CAACJ,IAAD;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCAAaG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,GAAG,EAAEH,IAA9B;AAAoC,UAAA,GAAG,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ,OAAUF,GAAV;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CA/BD;;KAAMF,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import \"../Characters/styles.css\";\nimport Alive from \"../Alive\";\n\nconst CharCard = ({ character, key }) => {\n  const { name, image, status, species } = character;\n\n  const handleName = (name) => {\n    let handledName = name.split(\" \").join(\"\");\n    if (handledName.length > 15) {\n      return name.slice(0, 13) + \"...\";\n    }\n    return name;\n  };\n\n  return (\n    <>\n      <div key={key} className=\"cards\">\n        {status === \"Alive\" ? (\n          <Alive\n            name={name}\n            species={species}\n            image={image}\n            handleName={handleName}\n          />\n        ) : (\n          <div style={{ color: \"red\", backgroundColor: \"pink\" }}>\n            <p>{handleName(name)}</p>\n            <p> Specie: {species}</p>\n            <img className=\"picture\" alt={name} src={image}></img>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CharCard;\n"]},"metadata":{},"sourceType":"module"}